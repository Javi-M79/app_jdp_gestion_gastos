package com.example.app_jdp_gestion_gastos.data.repositoryimport android.util.Logimport com.example.app_jdp_gestion_gastos.data.model.Expenseimport com.example.app_jdp_gestion_gastos.data.model.Incomeimport com.google.firebase.auth.FirebaseAuthimport com.google.firebase.firestore.FirebaseFirestoreimport kotlinx.coroutines.tasks.awaitclass StatsRepository {    private val db = FirebaseFirestore.getInstance()    private val auth = FirebaseAuth.getInstance()    suspend fun getExpenses(): List<Expense> {        val userId = auth.currentUser?.uid ?: "usuario_demo"        return try {            val querySnapshot = db.collection("expenses")                .whereEqualTo("userId", userId)                .get()                .await()            querySnapshot.toObjects(Expense::class.java)        } catch (e: Exception) {            Log.e("StatsRepository", "Error al obtener los gastos", e)            emptyList()        }    }    suspend fun getIncomes(): List<Income> {        val userId = auth.currentUser?.uid ?: "usuario_demo"        return try {            val querySnapshot = db.collection("incomes")                .whereEqualTo("userId", userId)                .get()                .await()            querySnapshot.toObjects(Income::class.java)        } catch (e: Exception) {            Log.e("StatsRepository", "Error al obtener los ingresos", e)            emptyList()        }    }}