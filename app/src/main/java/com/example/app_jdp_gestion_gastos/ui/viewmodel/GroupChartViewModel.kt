package com.example.app_jdp_gestion_gastos.ui.viewmodelimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.ViewModelProviderimport androidx.lifecycle.viewModelScopeimport com.example.app_jdp_gestion_gastos.data.repository.GroupChartRepositoryimport kotlinx.coroutines.launchclass GroupChartViewModel(private val repository: GroupChartRepository) : ViewModel() {    private val _barChartData = MutableLiveData<Pair<Float, Float>>()    val barChartData: LiveData<Pair<Float, Float>> get() = _barChartData    fun loadData(month: Int, year: Int) {        viewModelScope.launch {            val expenses = repository.getExpenses(month, year)            val incomes = repository.getIncomes(month, year)            // Aseg√∫rate de convertir a Float usando .toFloat()            val totalExpenses = expenses.sumOf { it.amount.toDouble() }.toFloat()            val totalIncomes = incomes.sumOf { it.amount.toDouble() }.toFloat()            _barChartData.postValue(Pair(totalIncomes, totalExpenses))        }    }}class GroupChartViewModelFactory(    private val repository: GroupChartRepository) : ViewModelProvider.Factory {    override fun <T : ViewModel> create(modelClass: Class<T>): T {        if (modelClass.isAssignableFrom(GroupChartViewModel::class.java)) {            @Suppress("UNCHECKED_CAST")            return GroupChartViewModel(repository) as T        }        throw IllegalArgumentException("Unknown ViewModel class")    }}