package com.example.app_jdp_gestion_gastos.ui.adaptersimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport com.example.app_jdp_gestion_gastos.Rimport com.example.app_jdp_gestion_gastos.data.model.Groupimport com.example.app_jdp_gestion_gastos.databinding.ItemGroupBindingimport java.text.SimpleDateFormatimport java.util.*class GroupAdapter(private val onItemClick: (Group) -> Unit) :    ListAdapter<Group, GroupAdapter.GroupViewHolder>(GroupDiffCallback()) {    private var selectedGroupId: String? = null    fun setSelectedGroup(group: Group) {        selectedGroupId = group.id        notifyDataSetChanged()    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): GroupViewHolder {        val binding = ItemGroupBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return GroupViewHolder(binding, onItemClick)    }    override fun onBindViewHolder(holder: GroupViewHolder, position: Int) {        holder.bind(getItem(position), getItem(position).id == selectedGroupId)    }    class GroupViewHolder(        private val binding: ItemGroupBinding,        private val onItemClick: (Group) -> Unit    ) : RecyclerView.ViewHolder(binding.root) {        fun bind(group: Group, isSelected: Boolean) {            binding.textViewGroupName.text = group.name            binding.textViewGroupMembers.text = "Miembros: ${group.members.size}"            val formattedDate = group.createdAt?.toDate()?.let {                SimpleDateFormat("dd/MM/yyyy", Locale.getDefault()).format(it)            } ?: "Fecha desconocida"            binding.textViewGroupCreatedAt.text = "Creado el: $formattedDate"            binding.root.setOnClickListener {                onItemClick(group)            }            // Cambiar el fondo según si está seleccionado            binding.root.setBackgroundResource(                if (isSelected) R.drawable.bg_group_selected else R.drawable.bg_group_default            )        }    }    class GroupDiffCallback : DiffUtil.ItemCallback<Group>() {        override fun areItemsTheSame(oldItem: Group, newItem: Group): Boolean {            return oldItem.id == newItem.id        }        override fun areContentsTheSame(oldItem: Group, newItem: Group): Boolean {            return oldItem == newItem        }    }}